(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{x:()=>S});var t={baseUrl:"https://nomoreparties.co/v1/wbc-cohort-1",headers:{authorization:"322e73f5-b48c-4094-a909-95dc3b0fb90c","Content-Type":"application/json"}};function n(e){return e.ok?e.json():e.json().then((function(t){return t.code=e.status,Promise.reject("Ошибка: ".concat(e.status))}))}function o(e){console.log(e)}var r={formSelector:".popup__form",inputSelector:".popup__input-item",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__input-item_error",errorClass:"popup__input-error-message_active"};function c(e){"Escape"===e.key&&a(document.querySelector(".popup_opened"))}function a(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",c)}function u(e){e.classList.add("popup_opened"),document.addEventListener("keydown",c)}var i=document.querySelector("#place-template").content,l=document.querySelector(".popup-place"),s=l.querySelector("img"),d=l.querySelector(".popup__place-title"),p=document.querySelector(".popup-delete"),f=null;function m(e){var r=i.querySelector(".place").cloneNode(!0),c=r.querySelector(".place__image"),a=r.querySelector(".place__delete-button"),m=r.querySelector(".place__like-button"),v=r.querySelector(".place__like-counter");return c.src=e.link,c.alt=e.name,r.id=e._id,v.textContent=e.likes.length,r.querySelector(".place__title").textContent=e.name,Array.from(e.likes).forEach((function(e){e._id===S&&m.classList.add("place__like-button_active")})),m.addEventListener("click",(function(){m.classList.contains("place__like-button_active")?function(e,r,c){return(a=e.id,fetch("".concat(t.baseUrl,"/cards/likes/").concat(a),{method:"DELETE",headers:t.headers}).then(n)).then((function(e){r.classList.remove("place__like-button_active"),c.textContent=e.likes.length})).catch(o);var a}(r,m,v):function(e,r,c){return(a=e.id,fetch("".concat(t.baseUrl,"/cards/likes/").concat(a),{method:"PUT",headers:t.headers}).then(n)).then((function(e){r.classList.add("place__like-button_active"),c.textContent=e.likes.length})).catch(o);var a}(r,m,v)})),e.owner._id!==S?a.remove():a.addEventListener("click",(function(e){f=e.target.closest(".place"),u(p)})),c.addEventListener("click",(function(){s.src=e.link,s.alt=e.name,d.textContent=e.name,u(l)})),r}function v(e,t){var n=t.querySelector(".popup__save-button");e?(n.textContent="Удаление...",n.disabled=!0):(n.textContent="Да",n.disabled=!1)}function _(e,t){var n=document.getElementById("".concat(e.id,"-error"));e.classList.remove(t.inputErrorClass),n.classList.remove(t.errorClass),n.textContent=""}function y(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);n.forEach((function(e){_(e,t)})),h(o,t)}function h(e,t){var n=t.inactiveButtonClass;e.classList.add(n),e.disabled=!0}function b(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?function(e,t){var n=t.inactiveButtonClass;e.classList.remove(n),e.disabled=!1}(t,n):h(t,n)}var S,q=document.querySelector(".profile__name"),E=document.querySelector(".profile__profession"),C=document.querySelector(".profile__avatar"),L=document.querySelector(".popup__input-item_profile_name"),k=document.querySelector(".popup__input-item_profile_profission"),g=document.querySelector(".places"),x=document.querySelector(".popup__input-item_place_title"),A=document.querySelector(".popup__input-item_place_link"),U=document.querySelector(".popup-edit"),w=document.querySelector(".popup-add"),j=(document.querySelector(".profile__avatar"),document.querySelector(".popup__input-item_avatar")),O=document.querySelector(".popup-avatar");function B(e,t){var n=t.querySelector(".popup__save-button");e?(n.textContent="Сохранение...",n.disabled=!0):(n.textContent="Сохранить",n.disabled=!1)}function P(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var T,D=document.querySelector(".profile__edit-button"),I=document.querySelector(".profile__add-button"),N=document.querySelector(".profile__avatar-edit-button"),J=document.querySelector("#profile"),H=document.querySelector("#place"),M=document.querySelector("#avatar"),z=document.querySelector("#delete");document.querySelectorAll(".popup").forEach((function(e){e.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&a(e),t.target.classList.contains("popup__close-button")&&a(e)}))})),Promise.all([fetch("".concat(t.baseUrl,"/users/me"),{headers:t.headers}).then(n),fetch("".concat(t.baseUrl,"/cards"),{headers:t.headers}).then(n)]).then((function(e){var t,n,o=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var o,r,c=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(c.push(o.value),!t||c.length!==t);a=!0);}catch(e){u=!0,r=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw r}}return c}}(t,n)||function(e,t){if(e){if("string"==typeof e)return P(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?P(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[0],c=o[1];q.textContent=r.name,E.textContent=r.about,C.src=r.avatar,S=r._id,c.forEach((function(e){g.append(m(e))})),console.log(r),console.log(c)})).catch(o),J.addEventListener("submit",(function(e){var r,c;e.preventDefault(),B(!0,U),(r=L.value,c=k.value,fetch("".concat(t.baseUrl,"/users/me"),{method:"PATCH",headers:t.headers,body:JSON.stringify({name:r,about:c})}).then(n)).then((function(e){q.textContent=e.name,E.textContent=e.about})).catch(o).then(a(U)).finally((function(){B(!1,U)}))})),H.addEventListener("submit",(function(e){var r,c;e.preventDefault(),B(!0,w),(r=x.value,c=A.value,fetch("".concat(t.baseUrl,"/cards"),{method:"POST",headers:t.headers,body:JSON.stringify({name:r,link:c})}).then(n)).then((function(e){g.prepend(m(e))})).catch(o).then(a(w)).finally((function(){B(!1,w)}))})),M.addEventListener("submit",(function(e){var r;e.preventDefault(),B(!0,O),(r=j.value,fetch("".concat(t.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:t.headers,body:JSON.stringify({avatar:r})}).then(n)).then((function(e){C.src=e.avatar})).catch(o).then(a(O)).finally((function(){B(!1,O)}))})),z.addEventListener("submit",(function(e){return e.preventDefault(),v(!0,p),(r=f.id,fetch("".concat(t.baseUrl,"/cards/").concat(r),{method:"DELETE",headers:t.headers}).then(n)).then((function(){f.remove(),a(p),f=null})).catch(o).finally((function(){v(!1,p)}));var r})),D.addEventListener("click",(function(){L.value=q.textContent,k.value=E.textContent,y(J,r),u(U)})),I.addEventListener("click",(function(){x.value="",A.value="",y(H,r),u(w)})),N.addEventListener("click",(function(){j.value="",y(M,r),u(O)})),T=r,Array.from(document.querySelectorAll(T.formSelector)).forEach((function(e){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);b(n,o,t),n.forEach((function(e){e.addEventListener("input",(function(){(function(e,t){e.validity.valid?_(e,t):function(e,t,n){var o=document.getElementById("".concat(e.id,"-error"));e.classList.add(t.inputErrorClass),o.classList.add(t.errorClass),o.textContent=n}(e,t,e.validationMessage)})(e,t),b(n,o,t)}))}))}(e,T)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,